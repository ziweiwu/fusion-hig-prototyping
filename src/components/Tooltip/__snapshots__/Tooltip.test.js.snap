// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Tooltip Snapshot tests tooltip with click 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Tooltip
    align={Object {}}
    arrowContent={null}
    destroyTooltipOnHide={true}
    mouseEnterDelay={1}
    mouseLeaveDelay={0.2}
    overlay={[Function]}
    overlayClassName="css-d70g0l"
    placement="right"
    prefixCls="hig__tooltip"
    title="test"
    transitionName="fade"
    trigger="click"
    visible={false}
    width={300}
  >
    <div
      className="hig__tooltip-children-wrapper"
    >
      <button>
        tooltip
      </button>
    </div>
  </Tooltip>,
  "nodes": Array [
    <Tooltip
      align={Object {}}
      arrowContent={null}
      destroyTooltipOnHide={true}
      mouseEnterDelay={1}
      mouseLeaveDelay={0.2}
      overlay={[Function]}
      overlayClassName="css-d70g0l"
      placement="right"
      prefixCls="hig__tooltip"
      title="test"
      transitionName="fade"
      trigger="click"
      visible={false}
      width={300}
    >
      <div
        className="hig__tooltip-children-wrapper"
      >
        <button>
          tooltip
        </button>
      </div>
    </Tooltip>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_context": Object {},
    "_element": <Tooltip
      anchorPoint="left"
      mouseEnterDelay={1}
      mouseLeaveDelay={0.2}
      title="test"
      trigger="click"
      width={300}
    >
      <button>
        tooltip
      </button>
    </Tooltip>,
    "_forcedUpdate": false,
    "_instance": Tooltip {
      "context": Object {},
      "handleClick": [Function],
      "props": Object {
        "anchorPoint": "left",
        "children": <button>
          tooltip
        </button>,
        "mouseEnterDelay": 1,
        "mouseLeaveDelay": 0.2,
        "title": "test",
        "trigger": "click",
        "width": 300,
      },
      "refs": Object {},
      "renderChildren": [Function],
      "renderContainer": [Function],
      "renderContent": [Function],
      "renderDescription": [Function],
      "renderTitle": [Function],
      "renderURL": [Function],
      "state": Object {
        "isVisible": false,
      },
      "updater": Updater {
        "_callbacks": Array [],
        "_renderer": [Circular],
      },
      "visibilityOff": [Function],
      "visibilityOn": [Function],
    },
    "_newState": null,
    "_rendered": <Tooltip
      align={Object {}}
      arrowContent={null}
      destroyTooltipOnHide={true}
      mouseEnterDelay={1}
      mouseLeaveDelay={0.2}
      overlay={[Function]}
      overlayClassName="css-d70g0l"
      placement="right"
      prefixCls="hig__tooltip"
      title="test"
      transitionName="fade"
      trigger="click"
      visible={false}
      width={300}
    >
      <div
        className="hig__tooltip-children-wrapper"
      >
        <button>
          tooltip
        </button>
      </div>
    </Tooltip>,
    "_rendering": false,
    "_updater": Updater {
      "_callbacks": Array [],
      "_renderer": [Circular],
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Tooltip
    anchorPoint="left"
    mouseEnterDelay={1}
    mouseLeaveDelay={0.2}
    title="test"
    trigger="click"
    width={300}
  >
    <button>
      tooltip
    </button>
  </Tooltip>,
}
`;

exports[`Tooltip Snapshot tests tooltip with click 2`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Tooltip
    align={Object {}}
    arrowContent={null}
    destroyTooltipOnHide={true}
    mouseEnterDelay={1}
    mouseLeaveDelay={0.2}
    overlay={[Function]}
    overlayClassName="css-d70g0l"
    placement="right"
    prefixCls="hig__tooltip"
    title="test"
    transitionName="fade"
    trigger="click"
    visible={false}
    width={300}
  >
    <div
      className="hig__tooltip-children-wrapper"
    >
      <button>
        tooltip
      </button>
    </div>
  </Tooltip>,
  "nodes": Array [
    <Tooltip
      align={Object {}}
      arrowContent={null}
      destroyTooltipOnHide={true}
      mouseEnterDelay={1}
      mouseLeaveDelay={0.2}
      overlay={[Function]}
      overlayClassName="css-d70g0l"
      placement="right"
      prefixCls="hig__tooltip"
      title="test"
      transitionName="fade"
      trigger="click"
      visible={false}
      width={300}
    >
      <div
        className="hig__tooltip-children-wrapper"
      >
        <button>
          tooltip
        </button>
      </div>
    </Tooltip>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_context": Object {},
    "_element": <Tooltip
      anchorPoint="left"
      mouseEnterDelay={1}
      mouseLeaveDelay={0.2}
      title="test"
      trigger="click"
      width={300}
    >
      <button>
        tooltip
      </button>
    </Tooltip>,
    "_forcedUpdate": false,
    "_instance": Tooltip {
      "context": Object {},
      "handleClick": [Function],
      "props": Object {
        "anchorPoint": "left",
        "children": <button>
          tooltip
        </button>,
        "mouseEnterDelay": 1,
        "mouseLeaveDelay": 0.2,
        "title": "test",
        "trigger": "click",
        "width": 300,
      },
      "refs": Object {},
      "renderChildren": [Function],
      "renderContainer": [Function],
      "renderContent": [Function],
      "renderDescription": [Function],
      "renderTitle": [Function],
      "renderURL": [Function],
      "state": Object {
        "isVisible": false,
      },
      "updater": Updater {
        "_callbacks": Array [],
        "_renderer": [Circular],
      },
      "visibilityOff": [Function],
      "visibilityOn": [Function],
    },
    "_newState": null,
    "_rendered": <Tooltip
      align={Object {}}
      arrowContent={null}
      destroyTooltipOnHide={true}
      mouseEnterDelay={1}
      mouseLeaveDelay={0.2}
      overlay={[Function]}
      overlayClassName="css-d70g0l"
      placement="right"
      prefixCls="hig__tooltip"
      title="test"
      transitionName="fade"
      trigger="click"
      visible={false}
      width={300}
    >
      <div
        className="hig__tooltip-children-wrapper"
      >
        <button>
          tooltip
        </button>
      </div>
    </Tooltip>,
    "_rendering": false,
    "_updater": Updater {
      "_callbacks": Array [],
      "_renderer": [Circular],
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Tooltip
    anchorPoint="left"
    mouseEnterDelay={1}
    mouseLeaveDelay={0.2}
    title="test"
    trigger="click"
    width={300}
  >
    <button>
      tooltip
    </button>
  </Tooltip>,
}
`;

exports[`Tooltip Snapshot tests tooltip with focus 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Tooltip
    align={Object {}}
    arrowContent={null}
    destroyTooltipOnHide={true}
    mouseEnterDelay={1}
    mouseLeaveDelay={0.2}
    overlay={[Function]}
    overlayClassName="css-d70g0l"
    placement="right"
    prefixCls="hig__tooltip"
    title="test"
    transitionName="fade"
    trigger="focus"
    visible={false}
    width={300}
  >
    <div
      className="hig__tooltip-children-wrapper"
    >
      <button>
        tooltip
      </button>
    </div>
  </Tooltip>,
  "nodes": Array [
    <Tooltip
      align={Object {}}
      arrowContent={null}
      destroyTooltipOnHide={true}
      mouseEnterDelay={1}
      mouseLeaveDelay={0.2}
      overlay={[Function]}
      overlayClassName="css-d70g0l"
      placement="right"
      prefixCls="hig__tooltip"
      title="test"
      transitionName="fade"
      trigger="focus"
      visible={false}
      width={300}
    >
      <div
        className="hig__tooltip-children-wrapper"
      >
        <button>
          tooltip
        </button>
      </div>
    </Tooltip>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_context": Object {},
    "_element": <Tooltip
      anchorPoint="left"
      mouseEnterDelay={1}
      mouseLeaveDelay={0.2}
      title="test"
      trigger="focus"
      width={300}
    >
      <button>
        tooltip
      </button>
    </Tooltip>,
    "_forcedUpdate": false,
    "_instance": Tooltip {
      "context": Object {},
      "handleClick": [Function],
      "props": Object {
        "anchorPoint": "left",
        "children": <button>
          tooltip
        </button>,
        "mouseEnterDelay": 1,
        "mouseLeaveDelay": 0.2,
        "title": "test",
        "trigger": "focus",
        "width": 300,
      },
      "refs": Object {},
      "renderChildren": [Function],
      "renderContainer": [Function],
      "renderContent": [Function],
      "renderDescription": [Function],
      "renderTitle": [Function],
      "renderURL": [Function],
      "state": Object {
        "isVisible": false,
      },
      "updater": Updater {
        "_callbacks": Array [],
        "_renderer": [Circular],
      },
      "visibilityOff": [Function],
      "visibilityOn": [Function],
    },
    "_newState": null,
    "_rendered": <Tooltip
      align={Object {}}
      arrowContent={null}
      destroyTooltipOnHide={true}
      mouseEnterDelay={1}
      mouseLeaveDelay={0.2}
      overlay={[Function]}
      overlayClassName="css-d70g0l"
      placement="right"
      prefixCls="hig__tooltip"
      title="test"
      transitionName="fade"
      trigger="focus"
      visible={false}
      width={300}
    >
      <div
        className="hig__tooltip-children-wrapper"
      >
        <button>
          tooltip
        </button>
      </div>
    </Tooltip>,
    "_rendering": false,
    "_updater": Updater {
      "_callbacks": Array [],
      "_renderer": [Circular],
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Tooltip
    anchorPoint="left"
    mouseEnterDelay={1}
    mouseLeaveDelay={0.2}
    title="test"
    trigger="focus"
    width={300}
  >
    <button>
      tooltip
    </button>
  </Tooltip>,
}
`;

exports[`Tooltip Snapshot tests tooltip with full content 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Tooltip
    align={Object {}}
    arrowContent={null}
    content={
      <div>
        test
      </div>
    }
    description="test"
    destroyTooltipOnHide={true}
    linkTitle="test"
    linkURL="www.test.com"
    mouseEnterDelay={1}
    mouseLeaveDelay={0.2}
    overlay={[Function]}
    overlayClassName="css-d70g0l"
    placement="right"
    prefixCls="hig__tooltip"
    title="test"
    transitionName="fade"
    trigger="click"
    visible={false}
    width={300}
  >
    <div
      className="hig__tooltip-children-wrapper"
    >
      <button>
        tooltip
      </button>
    </div>
  </Tooltip>,
  "nodes": Array [
    <Tooltip
      align={Object {}}
      arrowContent={null}
      content={
        <div>
          test
        </div>
      }
      description="test"
      destroyTooltipOnHide={true}
      linkTitle="test"
      linkURL="www.test.com"
      mouseEnterDelay={1}
      mouseLeaveDelay={0.2}
      overlay={[Function]}
      overlayClassName="css-d70g0l"
      placement="right"
      prefixCls="hig__tooltip"
      title="test"
      transitionName="fade"
      trigger="click"
      visible={false}
      width={300}
    >
      <div
        className="hig__tooltip-children-wrapper"
      >
        <button>
          tooltip
        </button>
      </div>
    </Tooltip>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_context": Object {},
    "_element": <Tooltip
      anchorPoint="left"
      content={
        <div>
          test
        </div>
      }
      description="test"
      linkTitle="test"
      linkURL="www.test.com"
      mouseEnterDelay={1}
      mouseLeaveDelay={0.2}
      title="test"
      trigger="click"
      width={300}
    >
      <button>
        tooltip
      </button>
    </Tooltip>,
    "_forcedUpdate": false,
    "_instance": Tooltip {
      "context": Object {},
      "handleClick": [Function],
      "props": Object {
        "anchorPoint": "left",
        "children": <button>
          tooltip
        </button>,
        "content": <div>
          test
        </div>,
        "description": "test",
        "linkTitle": "test",
        "linkURL": "www.test.com",
        "mouseEnterDelay": 1,
        "mouseLeaveDelay": 0.2,
        "title": "test",
        "trigger": "click",
        "width": 300,
      },
      "refs": Object {},
      "renderChildren": [Function],
      "renderContainer": [Function],
      "renderContent": [Function],
      "renderDescription": [Function],
      "renderTitle": [Function],
      "renderURL": [Function],
      "state": Object {
        "isVisible": false,
      },
      "updater": Updater {
        "_callbacks": Array [],
        "_renderer": [Circular],
      },
      "visibilityOff": [Function],
      "visibilityOn": [Function],
    },
    "_newState": null,
    "_rendered": <Tooltip
      align={Object {}}
      arrowContent={null}
      content={
        <div>
          test
        </div>
      }
      description="test"
      destroyTooltipOnHide={true}
      linkTitle="test"
      linkURL="www.test.com"
      mouseEnterDelay={1}
      mouseLeaveDelay={0.2}
      overlay={[Function]}
      overlayClassName="css-d70g0l"
      placement="right"
      prefixCls="hig__tooltip"
      title="test"
      transitionName="fade"
      trigger="click"
      visible={false}
      width={300}
    >
      <div
        className="hig__tooltip-children-wrapper"
      >
        <button>
          tooltip
        </button>
      </div>
    </Tooltip>,
    "_rendering": false,
    "_updater": Updater {
      "_callbacks": Array [],
      "_renderer": [Circular],
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Tooltip
    anchorPoint="left"
    content={
      <div>
        test
      </div>
    }
    description="test"
    linkTitle="test"
    linkURL="www.test.com"
    mouseEnterDelay={1}
    mouseLeaveDelay={0.2}
    title="test"
    trigger="click"
    width={300}
  >
    <button>
      tooltip
    </button>
  </Tooltip>,
}
`;

exports[`Tooltip Snapshot tests tooltip with hover 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Tooltip
    align={Object {}}
    arrowContent={null}
    content={
      <div>
        test
      </div>
    }
    description="test"
    destroyTooltipOnHide={true}
    linkTitle="test"
    linkURL="www.test.com"
    mouseEnterDelay={1}
    mouseLeaveDelay={0.2}
    overlay={[Function]}
    overlayClassName="css-d70g0l"
    placement="right"
    prefixCls="hig__tooltip"
    title="test"
    transitionName="fade"
    trigger="click"
    visible={false}
    width={300}
  >
    <div
      className="hig__tooltip-children-wrapper"
    >
      <button>
        tooltip
      </button>
    </div>
  </Tooltip>,
  "nodes": Array [
    <Tooltip
      align={Object {}}
      arrowContent={null}
      content={
        <div>
          test
        </div>
      }
      description="test"
      destroyTooltipOnHide={true}
      linkTitle="test"
      linkURL="www.test.com"
      mouseEnterDelay={1}
      mouseLeaveDelay={0.2}
      overlay={[Function]}
      overlayClassName="css-d70g0l"
      placement="right"
      prefixCls="hig__tooltip"
      title="test"
      transitionName="fade"
      trigger="click"
      visible={false}
      width={300}
    >
      <div
        className="hig__tooltip-children-wrapper"
      >
        <button>
          tooltip
        </button>
      </div>
    </Tooltip>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_context": Object {},
    "_element": <Tooltip
      anchorPoint="left"
      content={
        <div>
          test
        </div>
      }
      description="test"
      linkTitle="test"
      linkURL="www.test.com"
      mouseEnterDelay={1}
      mouseLeaveDelay={0.2}
      title="test"
      trigger="click"
      width={300}
    >
      <button>
        tooltip
      </button>
    </Tooltip>,
    "_forcedUpdate": false,
    "_instance": Tooltip {
      "context": Object {},
      "handleClick": [Function],
      "props": Object {
        "anchorPoint": "left",
        "children": <button>
          tooltip
        </button>,
        "content": <div>
          test
        </div>,
        "description": "test",
        "linkTitle": "test",
        "linkURL": "www.test.com",
        "mouseEnterDelay": 1,
        "mouseLeaveDelay": 0.2,
        "title": "test",
        "trigger": "click",
        "width": 300,
      },
      "refs": Object {},
      "renderChildren": [Function],
      "renderContainer": [Function],
      "renderContent": [Function],
      "renderDescription": [Function],
      "renderTitle": [Function],
      "renderURL": [Function],
      "state": Object {
        "isVisible": false,
      },
      "updater": Updater {
        "_callbacks": Array [],
        "_renderer": [Circular],
      },
      "visibilityOff": [Function],
      "visibilityOn": [Function],
    },
    "_newState": null,
    "_rendered": <Tooltip
      align={Object {}}
      arrowContent={null}
      content={
        <div>
          test
        </div>
      }
      description="test"
      destroyTooltipOnHide={true}
      linkTitle="test"
      linkURL="www.test.com"
      mouseEnterDelay={1}
      mouseLeaveDelay={0.2}
      overlay={[Function]}
      overlayClassName="css-d70g0l"
      placement="right"
      prefixCls="hig__tooltip"
      title="test"
      transitionName="fade"
      trigger="click"
      visible={false}
      width={300}
    >
      <div
        className="hig__tooltip-children-wrapper"
      >
        <button>
          tooltip
        </button>
      </div>
    </Tooltip>,
    "_rendering": false,
    "_updater": Updater {
      "_callbacks": Array [],
      "_renderer": [Circular],
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Tooltip
    anchorPoint="left"
    content={
      <div>
        test
      </div>
    }
    description="test"
    linkTitle="test"
    linkURL="www.test.com"
    mouseEnterDelay={1}
    mouseLeaveDelay={0.2}
    title="test"
    trigger="click"
    width={300}
  >
    <button>
      tooltip
    </button>
  </Tooltip>,
}
`;
